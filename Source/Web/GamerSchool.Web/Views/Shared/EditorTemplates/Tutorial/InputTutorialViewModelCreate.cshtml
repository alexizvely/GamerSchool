@model GamerSchool.Web.ViewModels.Tutorial.TutorialInputViewModel

<div class="container-fluid">
    <div class="row text-left">
        <h3>Add New tutorial</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row form-horizontal">
            <div class="col-md-12">
                <fieldset>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control full-width" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @(Html.Kendo().EditorFor(model => model.Description)
                                      .Name("Description")
                                      .HtmlAttributes(new { style = "height:240px" })
                                      .Encode(false)
                                      .Resizable(resizable => resizable.Content(true).Toolbar(true))
                            )
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Files, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Files, new { type = "file", multiple = "multiple" })
                            @Html.ValidationMessageFor(model => model.Files, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group text-left">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-info full-width" />
                        </div>
                    </div>
                </fieldset>
            </div>
        </div>
    </div>
</div>

